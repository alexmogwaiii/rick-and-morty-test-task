{"version":3,"sources":["components/Header/Header.jsx","components/UI/Pagination/Pagination.jsx","api/api.js","api/characters.js","components/Characters/Character/Character.jsx","components/Characters/Filters/Filters.jsx","components/UI/Loader/Loader.jsx","components/Characters/Characters/Characters.jsx","api/episodes.js","components/Episodes/EpisodesTable/EpisodesTable.jsx","components/Episodes/Filters/Filters.jsx","components/Episodes/Episodes/Episodes.jsx","api/locations.js","components/Locations/LocationsTable/LocationsTable.jsx","components/Locations/Filters/Filters.jsx","components/Locations/Locations/Locations.jsx","components/WatchList/WatchListItem/WatchListItem.jsx","components/WatchList/WatchList/WatchList.jsx","App.js","index.js"],"names":["Header","className","to","activeClassName","useStyles","makeStyles","root","backgroundColor","color","fontSize","fontWeight","PaginationUi","countOfPages","page","handlePagination","classes","Pagination","count","size","variant","shape","onChange","renderItem","item","PaginationItem","request","resource","a","fetch","response","ok","Error","status","statusText","json","getCharacters","characters","theme","margin","spacing","closeButton","position","right","top","palette","grey","createMuiTheme","primary","yellow","Character","React","memo","character","useState","isModalOpen","setModal","handleClose","src","image","alt","name","species","icon","faCircle","ThemeProvider","Button","onClick","Dialog","fullWidth","maxWidth","title","open","onClose","transitionDuration","gender","location","IconButton","aria-label","select","width","cursor","overflow","label","left","control","Filters","setSpecies","setStatus","setGender","FormControl","InputLabel","id","Select","labelId","value","event","target","MenuProps","paper","MenuItem","marginTop","Loader","LinearProgress","Characters","setCharacters","setSpeciesFilter","setStatusFilter","setGenderFilter","hasError","setError","setPage","loadCharacters","queries","charactersFromServer","useEffect","info","pages","results","map","getEpisodes","episodes","EpisodesTable","episode","air_date","setFilterQuery","nameQuery","setName","delayedQuery","useCallback","debounce","cancel","htmlFor","classnames","episodes__input","type","placeholder","Episodes","setEpisodes","setErrorStatus","filterQuery","loadEpisodes","query","episodesFromServer","getLocations","locations","LocationsTable","dimension","setType","setDimension","typeQuery","dimensionQuery","handleChange","Locations","isInitialMount","useRef","setLocations","loadLocations","locationsFromServer","delayedRequest","current","GreenCheckbox","withStyles","green","checked","props","Checkbox","marginLeft","WatchListItem","todo","setWatchList","FormControlLabel","todoId","prevList","prevTodo","changedTodo","localStorage","setItem","JSON","stringify","startIcon","filter","removeItem","button","height","WatchList","watchList","setQuery","hasEmptyField","setFieldStatus","todos","Object","keys","key","push","parse","getItem","loadTodoListFromLC","onSubmit","preventDefault","newTodo","Date","toLocaleString","length","App","basename","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bac02a4.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <h1 className=\"header__title\">\n      Rick and Morty\n    </h1>\n\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/characters\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            Characters\n          </NavLink>\n        </li>\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/episodes\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            Episodes\n          </NavLink>\n        </li>\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/locations\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            Locations\n          </NavLink>\n        </li>\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/watch-list\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            My watch list\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles({\n  root: {\n    '& .Mui-selected': {\n      backgroundColor: 'yellow',\n    },\n    '& .Mui-selected:hover': {\n      backgroundColor: 'green',\n    },\n    '& button': {\n      color: '#fff',\n      fontSize: '1.5rem',\n      fontWeight: 'bold',\n      backgroundColor: '#97ce4c',\n    },\n    '& button:hover': {\n      backgroundColor: '#f0e14a',\n      color: 'red',\n    },\n  },\n});\n\nexport const PaginationUi = ({\n  countOfPages,\n  page,\n  handlePagination,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      count={countOfPages}\n      size=\"large\"\n      page={page}\n      className={classes.root}\n      variant=\"outlined\"\n      shape=\"rounded\"\n      color=\"secondary\"\n      onChange={handlePagination}\n      renderItem={(item => (\n        <PaginationItem\n          {...item}\n          className={classes.root}\n        />\n      ))}\n    />\n  );\n};\n\nPaginationUi.propTypes = {\n  countOfPages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  handlePagination: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const request = async(resource) => {\n  try {\n    const response = await fetch(`${BASE_URL}${resource}`);\n\n    if (!response.ok) {\n      throw new Error(`\n        ${response.status} - ${response.statusText}\n      `);\n    }\n\n    return response.json();\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { request } from './api';\n\nexport const getCharacters = async(page) => {\n  const characters = await request(`/character/?page=${page}`);\n\n  return characters;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme,\n  makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { yellow } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport './character.scss';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: yellow,\n  },\n});\n\nexport const Character = React.memo(({ character }) => {\n  const [isModalOpen, setModal] = useState(false);\n\n  const handleClose = () => {\n    setModal(false);\n  };\n\n  const handleOpen = () => {\n    setModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <li className=\"character\">\n      <img\n        src={character.image}\n        alt=\"character from Rick and Morty\"\n        className=\"character__image\"\n      />\n\n      <h3 className=\"character__name\">\n        {character.name}\n      </h3>\n\n      <p className=\"character__species\">\n        {character.species}\n      </p>\n\n      <p className=\"character__status\">\n        {character.status === 'Dead'\n          ? <FontAwesomeIcon icon={faCircle} color=\"red\" />\n          : <FontAwesomeIcon icon={faCircle} color=\"lime\" />\n        }\n      </p>\n\n      <ThemeProvider theme={theme}>\n        <Button\n          color=\"primary\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          className={classes.margin}\n        >\n          More Info\n        </Button>\n      </ThemeProvider>\n\n      <Dialog\n        fullWidth\n        maxWidth=\"xs\"\n        title=\"test dialog title\"\n        open={isModalOpen}\n        onClose={handleClose}\n        transitionDuration={1000}\n      >\n        <div className=\"character__info\">\n          <ul className=\"character__info-list\">\n            <li className=\"character__info-item\">\n              Name:\n              {` ${character.name}`}\n            </li>\n            <li className=\"character__info-item\">\n              Gender:\n              {` ${character.gender}`}\n            </li>\n            <li className=\"character__info-item\">\n              Location:\n              {` ${character.location.name}`}\n            </li>\n            <li className=\"character__info-item\">\n              Species:\n              {` ${character.species}`}\n            </li>\n            <li className=\"character__info-item\">\n              Status:\n              {` ${character.status}`}\n            </li>\n          </ul>\n\n          {isModalOpen ? (\n            <IconButton\n              aria-label=\"close\"\n              className={classes.closeButton}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </div>\n      </Dialog>\n    </li>\n  );\n});\n\nCharacter.propTypes = {\n  character: PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  select: {\n    '& ul': {\n      color: 'brown',\n      width: '125px',\n      cursor: 'pointer',\n    },\n    '& li': {\n      fontSize: '1.5rem',\n      width: '125px',\n      overflow: 'visible',\n    },\n  },\n  label: {\n    color: 'brown',\n    fontSize: '1.6rem',\n    left: '-5px',\n  },\n  control: {\n    backgroundColor: '#fae48bff',\n    width: '125px',\n  },\n});\n\nexport const Filters = ({\n  species,\n  status,\n  gender,\n  setSpecies,\n  setStatus,\n  setGender,\n}) => {\n  const classes = useStyles();\n  const handleSpecies = (event) => {\n    setSpecies(event.target.value);\n  };\n\n  const handleStatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleGender = (event) => {\n    setGender(event.target.value);\n  };\n\n  return (\n    <div className=\"characters__filters\">\n      <FormControl\n        className={classes.control}\n        variant=\"filled\"\n      >\n        <InputLabel\n          id=\"species\"\n          className={classes.label}\n        >\n          Species\n        </InputLabel>\n        <Select\n          labelId=\"species\"\n          value={species}\n          id=\"species-select\"\n          onChange={handleSpecies}\n          MenuProps={{ classes: { paper: classes.select } }}\n        >\n          <MenuItem value=\"\">All</MenuItem>\n          <MenuItem value=\"animal\">Animal</MenuItem>\n          <MenuItem value=\"robot\">Robot</MenuItem>\n          <MenuItem value=\"humanoid\">Humanoid</MenuItem>\n          <MenuItem value=\"human\">Human</MenuItem>\n          <MenuItem value=\"cronenberg\">Cronenberg</MenuItem>\n          <MenuItem value=\"unknown\">Unknown</MenuItem>\n          <MenuItem value=\"disease\">Disease</MenuItem>\n          <MenuItem value=\"poopybutthole\">Poopybutthole</MenuItem>\n          <MenuItem value=\"alien\">Alien</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl\n        className={classes.control}\n        variant=\"filled\"\n      >\n        <InputLabel\n          id=\"status\"\n          className={classes.label}\n        >\n          Status\n        </InputLabel>\n        <Select\n          labelId=\"status\"\n          value={status}\n          id=\"status-select\"\n          onChange={handleStatus}\n          MenuProps={{ classes: { paper: classes.select } }}\n        >\n          <MenuItem value=\"\">All</MenuItem>\n          <MenuItem value=\"dead\">Dead</MenuItem>\n          <MenuItem value=\"alive\">Alive</MenuItem>\n          <MenuItem value=\"unknown\">Unknown</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl\n        className={classes.control}\n        variant=\"filled\"\n      >\n        <InputLabel\n          id=\"gender\"\n          className={classes.label}\n        >\n          Gender\n        </InputLabel>\n        <Select\n          labelId=\"gender\"\n          value={gender}\n          id=\"gender-select\"\n          onChange={handleGender}\n          MenuProps={{ classes: { paper: classes.select } }}\n        >\n          <MenuItem value=\"\">All</MenuItem>\n          <MenuItem value=\"female\">Female</MenuItem>\n          <MenuItem value=\"male\">Male</MenuItem>\n          <MenuItem value=\"unknown\">Unknown</MenuItem>\n          <MenuItem value=\"genderless\">Genderless</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  species: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  setSpecies: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  setGender: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100vw',\n    marginTop: '10px',\n    position: 'absolute',\n    top: '-12px',\n  },\n}));\n\nexport const Loader = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress color=\"primary\" />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { PaginationUi } from '../../UI/Pagination';\nimport { getCharacters } from '../../../api/characters';\nimport { Character } from '../Character';\nimport { Filters } from '../Filters';\nimport { Loader } from '../../UI/Loader';\n\nimport './Characters.scss';\n\nexport const Characters = () => {\n  const [characters, setCharacters] = useState(null);\n  const [species, setSpeciesFilter] = useState('');\n  const [status, setStatusFilter] = useState('');\n  const [gender, setGenderFilter] = useState('');\n  const [hasError, setError] = useState(false);\n  const [page, setPage] = useState(1);\n\n  const loadCharacters = async() => {\n    let queries = '';\n\n    if (species || status || gender) {\n      queries = `&species=${species}&status=${status}&gender=${gender}`;\n    }\n\n    try {\n      const charactersFromServer = await getCharacters(page + queries);\n\n      setError(false);\n      setCharacters(charactersFromServer);\n    } catch (error) {\n      setError(true);\n      setPage(1);\n    }\n  };\n\n  const handlePagination = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    loadCharacters();\n  }, [page, species, status, gender]);\n\n  if (!characters) {\n    return (\n      <Loader />\n    );\n  }\n\n  const countOfPages = characters.info.pages;\n\n  return (\n    <article className=\"characters\">\n      <h2 className=\"characters__title\">\n        CHARACTERS\n      </h2>\n\n      <Filters\n        species={species}\n        status={status}\n        gender={gender}\n        setSpecies={setSpeciesFilter}\n        setStatus={setStatusFilter}\n        setGender={setGenderFilter}\n      />\n\n      <div className=\"characters__pagination\">\n        <PaginationUi\n          countOfPages={countOfPages}\n          handlePagination={handlePagination}\n          page={page}\n        />\n      </div>\n\n      {hasError\n        ? (\n          <div>\n            Connot find characters\n          </div>\n        ) : (\n          <ul className=\"characters__list\">\n            {characters.results.map(character => (\n              <Character key={character.id} character={character} />\n            ))}\n          </ul>\n        )}\n\n    </article>\n  );\n};\n","import { request } from './api';\n\nexport const getEpisodes = async(page) => {\n  const episodes = await request(`/episode/?page=${page}`);\n\n  return episodes;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const EpisodesTable = ({ episodes }) => (\n  <table className=\"episodes__table\">\n    <thead>\n      <tr className=\"episodes__table-head-row\">\n        <th className=\"episodes__table-head-column\">Id</th>\n        <th className=\"episodes__table-head-column\">Name</th>\n        <th className=\"episodes__table-head-column\">Air Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {episodes.map(episode => (\n        <tr key={episode.id} className=\"episodes__table-row\">\n          <td className=\"episodes__table-column\">\n            {episode.id}\n          </td>\n          <td className=\"episodes__table-column\">\n            {episode.name}\n          </td>\n          <td className=\"episodes__table-column\">\n            {episode.air_date}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nEpisodesTable.propTypes = {\n  episodes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    air_date: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\n\nexport const Filters = React.memo(({ hasError, setFilterQuery }) => {\n  const [nameQuery, setName] = useState('');\n\n  const updateQuery = () => {\n    setFilterQuery(nameQuery);\n  };\n\n  const delayedQuery = useCallback(\n    debounce(updateQuery, 500), [nameQuery],\n  );\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  useEffect(() => {\n    delayedQuery();\n\n    return delayedQuery.cancel;\n  }, [nameQuery]);\n\n  return (\n    <>\n      <label\n        htmlFor=\"episodes_name\"\n        className=\"episodes__label\"\n      >\n        Name\n      </label>\n      <input\n        className={classnames({\n          episodes__input: true,\n          'episodes__input--error': hasError,\n        })}\n        type=\"text\"\n        placeholder=\"Enter name here\"\n        value={nameQuery}\n        name=\"name\"\n        onChange={handleChange}\n        id=\"episodes_name\"\n      />\n    </>\n  );\n});\n\nFilters.propTypes = {\n  setFilterQuery: PropTypes.func.isRequired,\n  hasError: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { PaginationUi } from '../../UI/Pagination';\nimport { getEpisodes } from '../../../api/episodes';\nimport { Loader } from '../../UI/Loader';\nimport { EpisodesTable } from '../EpisodesTable';\nimport { Filters } from '../Filters';\n\nimport './Episodes.scss';\n\nexport const Episodes = () => {\n  const [episodes, setEpisodes] = useState(null);\n  const [hasError, setErrorStatus] = useState(false);\n  const [page, setPage] = useState(1);\n  const [filterQuery, setFilterQuery] = useState('');\n\n  const loadEpisodes = async() => {\n    try {\n      const query = `${page}&name=${filterQuery}`;\n\n      const episodesFromServer = await getEpisodes(query);\n\n      setErrorStatus(false);\n      setEpisodes(episodesFromServer);\n    } catch (error) {\n      setErrorStatus(true);\n    }\n  };\n\n  const handlePagination = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    loadEpisodes();\n  }, [page, filterQuery]);\n\n  if (!episodes) {\n    return (\n      <Loader />\n    );\n  }\n\n  const countOfPages = episodes.info.pages;\n\n  return (\n    <article className=\"episodes\">\n      <h2 className=\"episodes__title\">Episodes</h2>\n\n      <div className=\"episodes__filters\">\n        <Filters\n          setFilterQuery={setFilterQuery}\n          hasError={hasError}\n        />\n        {hasError\n        && (\n          <div className=\"episodes__error\">\n            Cannot find episodes\n          </div>\n        )}\n      </div>\n\n      <div className=\"episodes__pagination\">\n        <PaginationUi\n          countOfPages={countOfPages}\n          handlePagination={handlePagination}\n          page={page}\n        />\n      </div>\n\n      <EpisodesTable episodes={episodes.results} />\n    </article>\n  );\n};\n","import { request } from './api';\n\nexport const getLocations = async(page) => {\n  const locations = await request(`/location/?page=${page}`);\n\n  return locations;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LocationsTable = ({ locations }) => (\n  <table className=\"locations__table\">\n    <thead>\n      <tr className=\"locations__table-head-row\">\n        <th className=\"locations__table-head-column\">\n          Name\n        </th>\n        <th className=\"locations__table-head-column\">\n          Type\n        </th>\n        <th className=\"locations__table-head-column\">\n          Dimension\n        </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {locations.map(location => (\n        <tr key={location.id} className=\"locations__table-row\">\n          <td className=\"locations__table-column\">\n            {location.name}\n          </td>\n          <td className=\"locations__table-column\">\n            {location.type}\n          </td>\n          <td className=\"locations__table-column\">\n            {location.dimension}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nLocationsTable.propTypes = {\n  locations: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    dimension: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Filters = React.memo(({\n  setName,\n  setType,\n  setDimension,\n  nameQuery,\n  typeQuery,\n  dimensionQuery,\n}) => {\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'type':\n        setType(value);\n        break;\n      case 'dimension':\n        setDimension(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"locations__filters\">\n      <div className=\"locations__filter-item\">\n        <label\n          htmlFor=\"name\"\n          className=\"locations__label\"\n        >\n          Name\n        </label>\n        <input\n          className=\"locations__input\"\n          type=\"text\"\n          placeholder=\"Enter name here\"\n          value={nameQuery}\n          name=\"name\"\n          onChange={handleChange}\n          id=\"name\"\n        />\n      </div>\n\n      <div className=\"locations__filter-item\">\n        <label\n          htmlFor=\"type\"\n          className=\"locations__label\"\n        >\n          Type\n        </label>\n        <input\n          className=\"locations__input\"\n          type=\"text\"\n          placeholder=\"Enter type here\"\n          value={typeQuery}\n          name=\"type\"\n          onChange={handleChange}\n          id=\"type\"\n        />\n      </div>\n\n      <div className=\"locations__filter-item\">\n        <label\n          htmlFor=\"dimension\"\n          className=\"locations__label\"\n        >\n          Dimension\n        </label>\n        <input\n          className=\"locations__input\"\n          type=\"text\"\n          placeholder=\"Enter dimension here\"\n          value={dimensionQuery}\n          name=\"dimension\"\n          onChange={handleChange}\n          id=\"dimension\"\n        />\n      </div>\n    </div>\n  );\n});\n\nFilters.propTypes = {\n  setName: PropTypes.func.isRequired,\n  setType: PropTypes.func.isRequired,\n  setDimension: PropTypes.func.isRequired,\n  nameQuery: PropTypes.string.isRequired,\n  typeQuery: PropTypes.string.isRequired,\n  dimensionQuery: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nimport { getLocations } from '../../../api/locations';\nimport { Loader } from '../../UI/Loader';\nimport { PaginationUi } from '../../UI/Pagination';\nimport { LocationsTable } from '../LocationsTable';\nimport { Filters } from '../Filters';\n\nimport './Locations.scss';\n\nexport const Locations = () => {\n  const isInitialMount = useRef(true);\n  const [locations, setLocations] = useState(null);\n  const [page, setPage] = useState(1);\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n  const [dimension, setDimension] = useState('');\n\n  const loadLocations = async() => {\n    try {\n      const query = `&name=${name}&type=${type}&dimension=${dimension}`;\n      const locationsFromServer = await getLocations(page + query);\n\n      setLocations(locationsFromServer);\n    } catch (error) {\n      setPage(1);\n    }\n  };\n\n  const delayedRequest = useCallback(debounce(\n    loadLocations, 600,\n  ), [name, type, dimension]);\n\n  const handlePagination = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    loadLocations();\n  }, [page]);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      delayedRequest();\n\n      return delayedRequest.cancel;\n    }\n\n    return null;\n  }, [name, type, dimension]);\n\n  if (!locations) {\n    return (\n      <Loader />\n    );\n  }\n\n  const countOfPages = locations.info.pages;\n\n  return (\n    <article className=\"locations\">\n      <h2 className=\"locations__title\">Locations</h2>\n\n      <Filters\n        nameQuery={name}\n        typeQuery={type}\n        dimensionQuery={dimension}\n        setName={setName}\n        setType={setType}\n        setDimension={setDimension}\n      />\n\n      <div className=\"locations__pagination\">\n        <PaginationUi\n          countOfPages={countOfPages}\n          handlePagination={handlePagination}\n          page={page}\n        />\n      </div>\n\n      <LocationsTable locations={locations.results} />\n    </article>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n  label: {\n    '& .MuiFormControlLabel-label': {\n      fontSize: '1.4rem',\n      marginLeft: '50px',\n      fontWeight: 'bolde',\n    },\n  },\n});\n\nexport const WatchListItem = React.memo(({ todo, setWatchList }) => {\n  const classes = useStyles();\n\n  const toggleCheckbox = (todoId) => {\n    setWatchList(prevList => prevList.map((prevTodo) => {\n      if (prevTodo.id === todoId) {\n        const changedTodo = {\n          ...prevTodo,\n          status: !prevTodo.status,\n        };\n\n        localStorage.setItem(todoId, JSON.stringify(changedTodo));\n\n        return changedTodo;\n      }\n\n      return prevTodo;\n    }));\n  };\n\n  const deleteTodo = (todoId) => {\n    setWatchList(prevList => prevList.filter((prevTodo) => {\n      if (prevTodo.id === todoId) {\n        return false;\n      }\n\n      return true;\n    }));\n\n    localStorage.removeItem(todoId);\n  };\n\n  return (\n    <li key={todo.id} className=\"watch-list__todo\">\n      <FormControlLabel\n        control={(\n          <GreenCheckbox\n            checked={todo.status}\n            onChange={() => {\n              toggleCheckbox(todo.id);\n            }}\n          />\n        )}\n        label={todo.name}\n        className={classes.label}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<DeleteIcon />}\n        onClick={() => {\n          deleteTodo(todo.id);\n        }}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n});\n\nWatchListItem.propTypes = {\n  todo: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired,\n  }).isRequired,\n  setWatchList: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { WatchListItem } from '../WatchListItem';\n\nimport './WatchList.scss';\n\nconst useStyles = makeStyles({\n  button: {\n    height: '36px',\n    marginLeft: '10px',\n  },\n});\n\nexport const WatchList = () => {\n  const classes = useStyles();\n  const [watchList, setWatchList] = useState([]);\n  const [query, setQuery] = useState('');\n  const [hasEmptyField, setFieldStatus] = useState(false);\n\n  const handleChange = (event) => {\n    setFieldStatus(false);\n    setQuery(event.target.value);\n  };\n\n  const loadTodoListFromLC = () => {\n    const todos = [];\n    const keys = Object.keys(localStorage);\n\n    for (const key of keys) {\n      todos.push(JSON.parse(localStorage.getItem(key)));\n    }\n\n    return todos;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!query) {\n      setFieldStatus(true);\n\n      return;\n    }\n\n    const newTodo = {\n      name: query,\n      status: false,\n      id: new Date().toLocaleString(),\n    };\n\n    localStorage.setItem(newTodo.id, JSON.stringify(newTodo));\n\n    setWatchList(prevList => (\n      [...prevList,\n        newTodo]\n    ));\n\n    setQuery('');\n  };\n\n  useEffect(() => {\n    setWatchList(loadTodoListFromLC());\n  }, []);\n\n  return (\n    <article className=\"watch-list\">\n      <h2 className=\"watch-list__title\">My Watch List</h2>\n\n      <form\n        className=\"watch-list__form\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          value={query}\n          placeholder=\"Enter episode name here\"\n          name=\"watch-list-input\"\n          onChange={handleChange}\n          className={classnames({\n            'watch-list__input': true,\n            'watch-list__input--error': hasEmptyField,\n          })}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Add\n        </Button>\n\n        {hasEmptyField\n          && (\n            <span className=\"watch-list__empty-field\">\n              The field must be filled in\n            </span>\n          )}\n      </form>\n\n      {watchList.length > 0\n        && (\n          <ul className=\"watch-list__todos\">\n            {watchList.map(todo => (\n              <WatchListItem\n                key={todo.id}\n                todo={todo}\n                setWatchList={setWatchList}\n              />\n            ))}\n          </ul>\n        )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\n\nimport { Header } from './components/Header';\nimport { Characters } from './components/Characters/Characters';\nimport { Episodes } from './components/Episodes/Episodes';\nimport { Locations } from './components/Locations/Locations';\nimport { WatchList } from './components/WatchList/WatchList';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Header />\n        <main className=\"main\">\n          <Route path=\"/characters\" component={Characters} />\n          <Route path=\"/episodes\" component={Episodes} />\n          <Route path=\"/locations\" component={Locations} />\n          <Route path=\"/watch-list\" component={WatchList} />\n        </main>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'normalize.css';\nimport './styles/reset.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}