{"version":3,"sources":["components/Header/Header.jsx","components/UI/Pagination/Pagination.jsx","api/api.js","api/characters.js","components/Characters/Character/Character.jsx","components/Characters/Filters/Filters.jsx","components/UI/Loader/Loader.jsx","components/Characters/Characters/Characters.jsx","api/episodes.js","components/Episodes/EpisodesTable/EpisodesTable.jsx","components/Episodes/Filters/Filters.jsx","components/Episodes/Episodes/Episodes.jsx","api/locations.js","components/Locations/LocationsTable/LocationsTable.jsx","components/Locations/Filters/Filters.jsx","components/Locations/Locations/Locations.jsx","App.js","index.js"],"names":["Header","className","to","activeClassName","useStyles","makeStyles","root","color","fontSize","fontWeight","boxShadow","border","PaginationUi","countOfPages","page","handlePagination","classes","Pagination","count","size","variant","shape","onChange","renderItem","item","PaginationItem","request","resource","a","fetch","response","ok","Error","status","statusText","json","getCharacters","characters","theme","margin","spacing","closeButton","position","right","top","palette","grey","createMuiTheme","primary","yellow","Character","React","memo","character","useState","isModalOpen","setModal","handleClose","src","image","alt","name","species","icon","faCircle","ThemeProvider","Button","onClick","Dialog","fullWidth","maxWidth","title","open","onClose","transitionDuration","gender","location","IconButton","aria-label","select","width","height","cursor","label","control","backgroundColor","Filters","setSpecies","setStatus","setGender","FormControl","InputLabel","id","Select","labelId","value","event","target","MenuItem","marginTop","Loader","LinearProgress","Characters","setCharacters","setSpeciesFilter","setStatusFilter","setGenderFilter","hasError","setError","setPage","loadCharacters","queries","charactersFromServer","useEffect","info","pages","results","map","getEpisodes","episodes","EpisodesTable","episode","air_date","setFilterQuery","nameQuery","setName","delayedQuery","useCallback","debounce","cancel","htmlFor","classnames","episodes__input","type","placeholder","Episodes","setEpisodes","setErrorStatus","filterQuery","loadEpisodes","query","episodesFromServer","getLocations","locations","LocationsTable","dimension","setType","setDimension","typeQuery","dimensionQuery","handleChange","Locations","isInitialMount","useRef","setLocations","loadLocations","locationsFromServer","delayedRequest","current","App","basename","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd7c496b.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <h1 className=\"header__title\">\n      Rick and Morty\n    </h1>\n\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/characters\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            Characters\n          </NavLink>\n        </li>\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/episodes\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            Episodes\n          </NavLink>\n        </li>\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/locations\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            Locations\n          </NavLink>\n        </li>\n        <li className=\"header__nav-item\">\n          <NavLink\n            to=\"/watch-list\"\n            className=\"header__nav-link\"\n            activeClassName=\"header__nav-link--active\"\n          >\n            My watch list\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles({\n  root: {\n    color: '#97ce4c',\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    boxShadow: '1px 1px 4px 97ce4c',\n    border: '2px solid #97ce4c',\n  },\n});\n\nexport const PaginationUi = ({\n  countOfPages,\n  page,\n  handlePagination,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Pagination\n      count={countOfPages}\n      size=\"large\"\n      page={page}\n      variant=\"outlined\"\n      shape=\"rounded\"\n      color=\"secondary\"\n      onChange={handlePagination}\n      renderItem={(item => (\n        <PaginationItem\n          {...item}\n          className={classes.root}\n        />\n      ))}\n    />\n  );\n};\n\nPaginationUi.propTypes = {\n  countOfPages: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  handlePagination: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const request = async(resource) => {\n  try {\n    const response = await fetch(`${BASE_URL}${resource}`);\n\n    if (!response.ok) {\n      throw new Error(`\n        ${response.status} - ${response.statusText}\n      `);\n    }\n\n    return response.json();\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { request } from './api';\n\nexport const getCharacters = async(page) => {\n  const characters = await request(`/character/?page=${page}`);\n\n  return characters;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme,\n  makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { yellow } from '@material-ui/core/colors';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport './character.scss';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: yellow,\n  },\n});\n\nexport const Character = React.memo(({ character }) => {\n  const [isModalOpen, setModal] = useState(false);\n\n  const handleClose = () => {\n    setModal(false);\n  };\n\n  const handleOpen = () => {\n    setModal(true);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <li className=\"character\">\n      <img\n        src={character.image}\n        alt=\"character from Rick and Morty\"\n        className=\"character__image\"\n      />\n\n      <h3 className=\"character__name\">\n        {character.name}\n      </h3>\n\n      <p className=\"character__species\">\n        {character.species}\n      </p>\n\n      <p className=\"character__status\">\n        {character.status === 'Dead'\n          ? <FontAwesomeIcon icon={faCircle} color=\"red\" />\n          : <FontAwesomeIcon icon={faCircle} color=\"lime\" />\n        }\n      </p>\n\n      <ThemeProvider theme={theme}>\n        <Button\n          color=\"primary\"\n          onClick={handleOpen}\n          variant=\"contained\"\n          className={classes.margin}\n        >\n          More Info\n        </Button>\n      </ThemeProvider>\n\n      <Dialog\n        fullWidth\n        maxWidth=\"xs\"\n        title=\"test dialog title\"\n        open={isModalOpen}\n        onClose={handleClose}\n        transitionDuration={1000}\n      >\n        <div className=\"character__info\">\n          <ul className=\"character__info-list\">\n            <li className=\"character__info-item\">\n              Name:\n              {` ${character.name}`}\n            </li>\n            <li className=\"character__info-item\">\n              Gender:\n              {` ${character.gender}`}\n            </li>\n            <li className=\"character__info-item\">\n              Location:\n              {` ${character.location.name}`}\n            </li>\n            <li className=\"character__info-item\">\n              Species:\n              {` ${character.species}`}\n            </li>\n            <li className=\"character__info-item\">\n              Status:\n              {` ${character.status}`}\n            </li>\n          </ul>\n\n          {isModalOpen ? (\n            <IconButton\n              aria-label=\"close\"\n              className={classes.closeButton}\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </div>\n      </Dialog>\n    </li>\n  );\n});\n\nCharacter.propTypes = {\n  character: PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  select: {\n    color: 'brown',\n    width: '80px',\n    height: '30px',\n    cursor: 'pointer',\n  },\n  label: {\n    color: 'brown',\n    fontSize: '1.6rem',\n  },\n  control: {\n    backgroundColor: '#fae48bff',\n    boxShadow: '1px 1px 5px green',\n    margin: '10px',\n  },\n});\n\nexport const Filters = ({\n  species,\n  status,\n  gender,\n  setSpecies,\n  setStatus,\n  setGender,\n}) => {\n  const classes = useStyles();\n  const handleSpecies = (event) => {\n    setSpecies(event.target.value);\n  };\n\n  const handleStatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleGender = (event) => {\n    setGender(event.target.value);\n  };\n\n  return (\n    <div className=\"characters__filters\">\n      <FormControl\n        className={classes.control}\n      >\n        <InputLabel\n          id=\"species\"\n          className={classes.label}\n        >\n          Species\n        </InputLabel>\n        <Select\n          labelId=\"species\"\n          value={species}\n          id=\"species-select\"\n          onChange={handleSpecies}\n          className={classes.select}\n        >\n          <MenuItem value=\"\">All</MenuItem>\n          <MenuItem value=\"animal\">Animal</MenuItem>\n          <MenuItem value=\"robot\">Robot</MenuItem>\n          <MenuItem value=\"humanoid\">Humanoid</MenuItem>\n          <MenuItem value=\"human\">Human</MenuItem>\n          <MenuItem value=\"cronenberg\">Cronenberg</MenuItem>\n          <MenuItem value=\"unknown\">Unknown</MenuItem>\n          <MenuItem value=\"disease\">Disease</MenuItem>\n          <MenuItem value=\"poopybutthole\">Poopybutthole</MenuItem>\n          <MenuItem value=\"alien\">Alien</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl\n        className={classes.control}\n      >\n        <InputLabel\n          id=\"status\"\n          className={classes.label}\n        >\n          Status\n        </InputLabel>\n        <Select\n          labelId=\"status\"\n          value={status}\n          id=\"status-select\"\n          onChange={handleStatus}\n          className={classes.select}\n        >\n          <MenuItem value=\"\">All</MenuItem>\n          <MenuItem value=\"dead\">Dead</MenuItem>\n          <MenuItem value=\"alive\">Alive</MenuItem>\n          <MenuItem value=\"unknown\">Unknown</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl\n        className={classes.control}\n      >\n        <InputLabel\n          id=\"gender\"\n          className={classes.label}\n        >\n          Gender\n        </InputLabel>\n        <Select\n          labelId=\"gender\"\n          value={gender}\n          id=\"gender-select\"\n          onChange={handleGender}\n          className={classes.select}\n        >\n          <MenuItem value=\"\">All</MenuItem>\n          <MenuItem value=\"female\">Female</MenuItem>\n          <MenuItem value=\"male\">Male</MenuItem>\n          <MenuItem value=\"unknown\">Unknown</MenuItem>\n          <MenuItem value=\"genderless\">Genderless</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  species: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  setSpecies: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n  setGender: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100vw',\n    marginTop: '10px',\n  },\n}));\n\nexport const Loader = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress color=\"primary\" />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { PaginationUi } from '../../UI/Pagination';\nimport { getCharacters } from '../../../api/characters';\nimport { Character } from '../Character';\nimport { Filters } from '../Filters';\nimport { Loader } from '../../UI/Loader';\n\nimport './Characters.scss';\n\nexport const Characters = () => {\n  const [characters, setCharacters] = useState(null);\n  const [species, setSpeciesFilter] = useState('');\n  const [status, setStatusFilter] = useState('');\n  const [gender, setGenderFilter] = useState('');\n  const [hasError, setError] = useState(false);\n\n  const [page, setPage] = useState(1);\n\n  const loadCharacters = async() => {\n    let queries = '';\n\n    if (species || status || gender) {\n      queries = `&species=${species}&status=${status}&gender=${gender}`;\n    }\n\n    try {\n      const charactersFromServer = await getCharacters(page + queries);\n\n      setError(false);\n      setCharacters(charactersFromServer);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handlePagination = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    loadCharacters();\n  }, [page, species, status, gender]);\n\n  if (!characters) {\n    return (\n      <Loader />\n    );\n  }\n\n  const countOfPages = characters.info.pages;\n\n  return (\n    <article className=\"characters\">\n      <h2 className=\"characters__title\">\n        CHARACTERS\n      </h2>\n\n      <Filters\n        species={species}\n        status={status}\n        gender={gender}\n        setSpecies={setSpeciesFilter}\n        setStatus={setStatusFilter}\n        setGender={setGenderFilter}\n      />\n\n      <div className=\"characters__pagination\">\n        <PaginationUi\n          countOfPages={countOfPages}\n          handlePagination={handlePagination}\n          page={page}\n        />\n      </div>\n\n      {hasError\n        ? (\n          <div>\n            Connot find characters\n          </div>\n        ) : (\n          <ul className=\"characters__list\">\n            {characters.results.map(character => (\n              <Character key={character.id} character={character} />\n            ))}\n          </ul>\n        )}\n\n    </article>\n  );\n};\n","import { request } from './api';\n\nexport const getEpisodes = async(page) => {\n  const episodes = await request(`/episode/?page=${page}`);\n\n  return episodes;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const EpisodesTable = ({ episodes }) => (\n  <table className=\"episodes__table\">\n    <thead>\n      <tr className=\"episodes__table-head-row\">\n        <th className=\"episodes__table-head-column\">Id</th>\n        <th className=\"episodes__table-head-column\">Name</th>\n        <th className=\"episodes__table-head-column\">Air Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {episodes.map(episode => (\n        <tr key={episode.id} className=\"episodes__table-row\">\n          <td className=\"episodes__table-column\">\n            {episode.id}\n          </td>\n          <td className=\"episodes__table-column\">\n            {episode.name}\n          </td>\n          <td className=\"episodes__table-column\">\n            {episode.air_date}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nEpisodesTable.propTypes = {\n  episodes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    air_date: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\n\nexport const Filters = React.memo(({ hasError, setFilterQuery }) => {\n  const [nameQuery, setName] = useState('');\n\n  const updateQuery = () => {\n    setFilterQuery(nameQuery);\n  };\n\n  const delayedQuery = useCallback(\n    debounce(updateQuery, 500), [nameQuery],\n  );\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  useEffect(() => {\n    delayedQuery();\n\n    return delayedQuery.cancel;\n  }, [nameQuery]);\n\n  return (\n    <>\n      <label\n        htmlFor=\"episodes_name\"\n        className=\"episodes__label\"\n      >\n        Name\n      </label>\n      <input\n        className={classnames({\n          episodes__input: true,\n          'episodes__input--error': hasError,\n        })}\n        type=\"text\"\n        placeholder=\"Enter name here\"\n        value={nameQuery}\n        name=\"name\"\n        onChange={handleChange}\n        id=\"episodes_name\"\n      />\n    </>\n  );\n});\n\nFilters.propTypes = {\n  setFilterQuery: PropTypes.func.isRequired,\n  hasError: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { PaginationUi } from '../../UI/Pagination';\nimport { getEpisodes } from '../../../api/episodes';\nimport { Loader } from '../../UI/Loader';\nimport { EpisodesTable } from '../EpisodesTable';\nimport { Filters } from '../Filters';\n\nimport './Episodes.scss';\n\nexport const Episodes = () => {\n  const [episodes, setEpisodes] = useState(null);\n  const [hasError, setErrorStatus] = useState(false);\n  const [page, setPage] = useState(1);\n  const [filterQuery, setFilterQuery] = useState('');\n\n  const loadEpisodes = async() => {\n    try {\n      const query = `${page}&name=${filterQuery}`;\n\n      const episodesFromServer = await getEpisodes(query);\n\n      setErrorStatus(false);\n      setEpisodes(episodesFromServer);\n    } catch (error) {\n      setErrorStatus(true);\n    }\n  };\n\n  const handlePagination = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    loadEpisodes();\n  }, [page, filterQuery]);\n\n  if (!episodes) {\n    return (\n      <Loader />\n    );\n  }\n\n  const countOfPages = episodes.info.pages;\n\n  return (\n    <article className=\"episodes\">\n      <h2 className=\"episodes__title\">Episodes</h2>\n\n      <div className=\"episodes__filters\">\n        <Filters\n          setFilterQuery={setFilterQuery}\n          hasError={hasError}\n        />\n        {hasError\n        && (\n          <div className=\"episodes__error\">\n            Cannot find episodes\n          </div>\n        )}\n      </div>\n\n      <div className=\"episodes__pagination\">\n        <PaginationUi\n          countOfPages={countOfPages}\n          handlePagination={handlePagination}\n          page={page}\n        />\n      </div>\n\n      <EpisodesTable episodes={episodes.results} />\n    </article>\n  );\n};\n","import { request } from './api';\n\nexport const getLocations = async(page) => {\n  const locations = await request(`/location/?page=${page}`);\n\n  return locations;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LocationsTable = ({ locations }) => (\n  <table className=\"locations__table\">\n    <thead>\n      <tr className=\"locations__table-head-row\">\n        <th className=\"locations__table-head-column\">\n          Name\n        </th>\n        <th className=\"locations__table-head-column\">\n          Type\n        </th>\n        <th className=\"locations__table-head-column\">\n          Dimension\n        </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {locations.map(location => (\n        <tr key={location.id} className=\"locations__table-row\">\n          <td className=\"locations__table-column\">\n            {location.name}\n          </td>\n          <td className=\"locations__table-column\">\n            {location.type}\n          </td>\n          <td className=\"locations__table-column\">\n            {location.dimension}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nLocationsTable.propTypes = {\n  locations: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    dimension: PropTypes.string.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Filters = React.memo(({\n  setName,\n  setType,\n  setDimension,\n  nameQuery,\n  typeQuery,\n  dimensionQuery,\n}) => {\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'type':\n        setType(value);\n        break;\n      case 'dimension':\n        setDimension(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"locations__filters\">\n      <div className=\"locations__filter-item\">\n        <label\n          htmlFor=\"name\"\n          className=\"locations__label\"\n        >\n          Name\n        </label>\n        <input\n          className=\"locations__input\"\n          type=\"text\"\n          placeholder=\"Enter name here\"\n          value={nameQuery}\n          name=\"name\"\n          onChange={handleChange}\n          id=\"name\"\n        />\n      </div>\n\n      <div className=\"locations__filter-item\">\n        <label\n          htmlFor=\"type\"\n          className=\"locations__label\"\n        >\n          Type\n        </label>\n        <input\n          className=\"locations__input\"\n          type=\"text\"\n          placeholder=\"Enter type here\"\n          value={typeQuery}\n          name=\"type\"\n          onChange={handleChange}\n          id=\"type\"\n        />\n      </div>\n\n      <div className=\"locations__filter-item\">\n        <label\n          htmlFor=\"dimension\"\n          className=\"locations__label\"\n        >\n          Dimension\n        </label>\n        <input\n          className=\"locations__input\"\n          type=\"text\"\n          placeholder=\"Enter dimension here\"\n          value={dimensionQuery}\n          name=\"dimension\"\n          onChange={handleChange}\n          id=\"dimension\"\n        />\n      </div>\n    </div>\n  );\n});\n\nFilters.propTypes = {\n  setName: PropTypes.func.isRequired,\n  setType: PropTypes.func.isRequired,\n  setDimension: PropTypes.func.isRequired,\n  nameQuery: PropTypes.string.isRequired,\n  typeQuery: PropTypes.string.isRequired,\n  dimensionQuery: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nimport { getLocations } from '../../../api/locations';\nimport { Loader } from '../../UI/Loader';\nimport { PaginationUi } from '../../UI/Pagination';\nimport { LocationsTable } from '../LocationsTable';\nimport { Filters } from '../Filters';\n\nimport './Locations.scss';\n\nexport const Locations = () => {\n  const isInitialMount = useRef(true);\n  const [locations, setLocations] = useState(null);\n  const [page, setPage] = useState(1);\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n  const [dimension, setDimension] = useState('');\n\n  const loadLocations = async() => {\n    try {\n      const query = `&name=${name}&type=${type}&dimension=${dimension}`;\n      const locationsFromServer = await getLocations(page + query);\n\n      setLocations(locationsFromServer);\n    } catch (error) {\n      setPage(1);\n    }\n  };\n\n  const delayedRequest = useCallback(debounce(\n    loadLocations, 600,\n  ), [name, type, dimension]);\n\n  const handlePagination = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    loadLocations();\n  }, [page]);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      delayedRequest();\n\n      return delayedRequest.cancel;\n    }\n\n    return null;\n  }, [name, type, dimension]);\n\n  if (!locations) {\n    return (\n      <Loader />\n    );\n  }\n\n  const countOfPages = locations.info.pages;\n\n  return (\n    <article className=\"locations\">\n      <h2 className=\"locations__title\">Locations</h2>\n\n      <Filters\n        nameQuery={name}\n        typeQuery={type}\n        dimensionQuery={dimension}\n        setName={setName}\n        setType={setType}\n        setDimension={setDimension}\n      />\n\n      <div className=\"locations__pagination\">\n        <PaginationUi\n          countOfPages={countOfPages}\n          handlePagination={handlePagination}\n          page={page}\n        />\n      </div>\n\n      <LocationsTable locations={locations.results} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\n\nimport { Header } from './components/Header';\nimport { Characters } from './components/Characters/Characters';\nimport { Episodes } from './components/Episodes/Episodes';\nimport { Locations } from './components/Locations/Locations';\n\nimport './App.scss';\nimport './styles/main.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Header />\n        <main className=\"main\">\n          <Route path=\"/characters\" component={Characters} />\n          <Route path=\"/episodes\" component={Episodes} />\n          <Route path=\"/locations\" component={Locations} />\n        </main>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'normalize.css';\nimport './styles/reset.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}